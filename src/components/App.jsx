import React from "react";
import Editor from "./Editor.jsx";
import Previewer from "./Previewer.jsx";
import marked from 'marked';


class App extends React.Component{
    constructor(props){
         super(props)
         this.state = {
            "text": String.fromCharCode(..."35 32 87 101 108 99 111 109 101 32 116 111 32 109 121 32 82 101 97 99 116 32 77 97 114 107 100 111 119 110 32 80 114 101 118 105 101 119 101 114 33 10 10 35 35 32 84 104 105 115 32 105 115 32 97 32 115 117 98 45 104 101 97 100 105 110 103 46 46 46 10 35 35 35 32 65 110 100 32 104 101 114 101 39 115 32 115 111 109 101 32 111 116 104 101 114 32 99 111 111 108 32 115 116 117 102 102 58 10 32 32 10 72 101 114 101 115 32 115 111 109 101 32 99 111 100 101 44 32 96 60 100 105 118 62 60 47 100 105 118 62 96 44 32 98 101 116 119 101 101 110 32 50 32 98 97 99 107 116 105 99 107 115 46 10 10 96 96 96 10 47 47 32 116 104 105 115 32 105 115 32 109 117 108 116 105 45 108 105 110 101 32 99 111 100 101 58 10 10 102 117 110 99 116 105 111 110 32 97 110 111 116 104 101 114 69 120 97 109 112 108 101 40 102 105 114 115 116 76 105 110 101 44 32 108 97 115 116 76 105 110 101 41 32 123 10 32 32 105 102 32 40 102 105 114 115 116 76 105 110 101 32 61 61 32 39 96 96 96 39 32 38 38 32 108 97 115 116 76 105 110 101 32 61 61 32 39 96 96 96 39 41 32 123 10 32 32 32 32 114 101 116 117 114 110 32 109 117 108 116 105 76 105 110 101 67 111 100 101 59 10 32 32 125 10 125 10 96 96 96 10 32 32 10 89 111 117 32 99 97 110 32 97 108 115 111 32 109 97 107 101 32 116 101 120 116 32 42 42 98 111 108 100 42 42 46 46 46 32 119 104 111 97 33 10 79 114 32 95 105 116 97 108 105 99 95 46 10 79 114 46 46 46 32 119 97 105 116 32 102 111 114 32 105 116 46 46 46 32 42 42 95 98 111 116 104 33 95 42 42 10 65 110 100 32 102 101 101 108 32 102 114 101 101 32 116 111 32 103 111 32 99 114 97 122 121 32 126 126 99 114 111 115 115 105 110 103 32 115 116 117 102 102 32 111 117 116 126 126 46 10 10 84 104 101 114 101 39 115 32 97 108 115 111 32 91 108 105 110 107 115 93 40 104 116 116 112 115 58 47 47 119 119 119 46 102 114 101 101 99 111 100 101 99 97 109 112 46 99 111 109 41 44 32 97 110 100 10 62 32 66 108 111 99 107 32 81 117 111 116 101 115 33 10 10 65 110 100 32 105 102 32 121 111 117 32 119 97 110 116 32 116 111 32 103 101 116 32 114 101 97 108 108 121 32 99 114 97 122 121 44 32 101 118 101 110 32 116 97 98 108 101 115 58 10 10 87 105 108 100 32 72 101 97 100 101 114 32 124 32 67 114 97 122 121 32 72 101 97 100 101 114 32 124 32 65 110 111 116 104 101 114 32 72 101 97 100 101 114 63 10 45 45 45 45 45 45 45 45 45 45 45 45 32 124 32 45 45 45 45 45 45 45 45 45 45 45 45 45 32 124 32 45 45 45 45 45 45 45 45 45 45 45 45 45 32 10 89 111 117 114 32 99 111 110 116 101 110 116 32 99 97 110 32 124 32 98 101 32 104 101 114 101 44 32 97 110 100 32 105 116 32 124 32 99 97 110 32 98 101 32 104 101 114 101 46 46 46 46 10 65 110 100 32 104 101 114 101 46 32 124 32 79 107 97 121 46 32 124 32 73 32 116 104 105 110 107 32 119 101 32 103 101 116 32 105 116 46 10 10 45 32 65 110 100 32 111 102 32 99 111 117 114 115 101 32 116 104 101 114 101 32 97 114 101 32 108 105 115 116 115 46 10 32 32 45 32 83 111 109 101 32 97 114 101 32 98 117 108 108 101 116 101 100 46 10 32 32 32 32 32 45 32 87 105 116 104 32 100 105 102 102 101 114 101 110 116 32 105 110 100 101 110 116 97 116 105 111 110 32 108 101 118 101 108 115 46 10 32 32 32 32 32 32 32 32 45 32 84 104 97 116 32 108 111 111 107 32 108 105 107 101 32 116 104 105 115 46 10 10 10 49 46 32 65 110 100 32 116 104 101 114 101 32 97 114 101 32 110 117 109 98 101 114 101 114 100 32 108 105 115 116 115 32 116 111 111 46 10 49 46 32 85 115 101 32 106 117 115 116 32 49 115 32 105 102 32 121 111 117 32 119 97 110 116 33 32 10 49 46 32 66 117 116 32 116 104 101 32 108 105 115 116 32 103 111 101 115 32 111 110 46 46 46 10 45 32 69 118 101 110 32 105 102 32 121 111 117 32 117 115 101 32 100 97 115 104 101 115 32 111 114 32 97 115 116 101 114 105 115 107 115 46 10 42 32 65 110 100 32 108 97 115 116 32 98 117 116 32 110 111 116 32 108 101 97 115 116 44 32 108 101 116 39 115 32 110 111 116 32 102 111 114 103 101 116 32 101 109 98 101 100 100 101 100 32 105 109 97 103 101 115 58 10 10 33 91 82 101 97 99 116 32 76 111 103 111 32 119 47 32 84 101 120 116 93 40 104 116 116 112 115 58 47 47 103 111 111 46 103 108 47 85 109 121 121 116 99 41".split(" ")),
            "marked": marked(String.fromCharCode(..."35 32 87 101 108 99 111 109 101 32 116 111 32 109 121 32 82 101 97 99 116 32 77 97 114 107 100 111 119 110 32 80 114 101 118 105 101 119 101 114 33 10 10 35 35 32 84 104 105 115 32 105 115 32 97 32 115 117 98 45 104 101 97 100 105 110 103 46 46 46 10 35 35 35 32 65 110 100 32 104 101 114 101 39 115 32 115 111 109 101 32 111 116 104 101 114 32 99 111 111 108 32 115 116 117 102 102 58 10 32 32 10 72 101 114 101 115 32 115 111 109 101 32 99 111 100 101 44 32 96 60 100 105 118 62 60 47 100 105 118 62 96 44 32 98 101 116 119 101 101 110 32 50 32 98 97 99 107 116 105 99 107 115 46 10 10 96 96 96 10 47 47 32 116 104 105 115 32 105 115 32 109 117 108 116 105 45 108 105 110 101 32 99 111 100 101 58 10 10 102 117 110 99 116 105 111 110 32 97 110 111 116 104 101 114 69 120 97 109 112 108 101 40 102 105 114 115 116 76 105 110 101 44 32 108 97 115 116 76 105 110 101 41 32 123 10 32 32 105 102 32 40 102 105 114 115 116 76 105 110 101 32 61 61 32 39 96 96 96 39 32 38 38 32 108 97 115 116 76 105 110 101 32 61 61 32 39 96 96 96 39 41 32 123 10 32 32 32 32 114 101 116 117 114 110 32 109 117 108 116 105 76 105 110 101 67 111 100 101 59 10 32 32 125 10 125 10 96 96 96 10 32 32 10 89 111 117 32 99 97 110 32 97 108 115 111 32 109 97 107 101 32 116 101 120 116 32 42 42 98 111 108 100 42 42 46 46 46 32 119 104 111 97 33 10 79 114 32 95 105 116 97 108 105 99 95 46 10 79 114 46 46 46 32 119 97 105 116 32 102 111 114 32 105 116 46 46 46 32 42 42 95 98 111 116 104 33 95 42 42 10 65 110 100 32 102 101 101 108 32 102 114 101 101 32 116 111 32 103 111 32 99 114 97 122 121 32 126 126 99 114 111 115 115 105 110 103 32 115 116 117 102 102 32 111 117 116 126 126 46 10 10 84 104 101 114 101 39 115 32 97 108 115 111 32 91 108 105 110 107 115 93 40 104 116 116 112 115 58 47 47 119 119 119 46 102 114 101 101 99 111 100 101 99 97 109 112 46 99 111 109 41 44 32 97 110 100 10 62 32 66 108 111 99 107 32 81 117 111 116 101 115 33 10 10 65 110 100 32 105 102 32 121 111 117 32 119 97 110 116 32 116 111 32 103 101 116 32 114 101 97 108 108 121 32 99 114 97 122 121 44 32 101 118 101 110 32 116 97 98 108 101 115 58 10 10 87 105 108 100 32 72 101 97 100 101 114 32 124 32 67 114 97 122 121 32 72 101 97 100 101 114 32 124 32 65 110 111 116 104 101 114 32 72 101 97 100 101 114 63 10 45 45 45 45 45 45 45 45 45 45 45 45 32 124 32 45 45 45 45 45 45 45 45 45 45 45 45 45 32 124 32 45 45 45 45 45 45 45 45 45 45 45 45 45 32 10 89 111 117 114 32 99 111 110 116 101 110 116 32 99 97 110 32 124 32 98 101 32 104 101 114 101 44 32 97 110 100 32 105 116 32 124 32 99 97 110 32 98 101 32 104 101 114 101 46 46 46 46 10 65 110 100 32 104 101 114 101 46 32 124 32 79 107 97 121 46 32 124 32 73 32 116 104 105 110 107 32 119 101 32 103 101 116 32 105 116 46 10 10 45 32 65 110 100 32 111 102 32 99 111 117 114 115 101 32 116 104 101 114 101 32 97 114 101 32 108 105 115 116 115 46 10 32 32 45 32 83 111 109 101 32 97 114 101 32 98 117 108 108 101 116 101 100 46 10 32 32 32 32 32 45 32 87 105 116 104 32 100 105 102 102 101 114 101 110 116 32 105 110 100 101 110 116 97 116 105 111 110 32 108 101 118 101 108 115 46 10 32 32 32 32 32 32 32 32 45 32 84 104 97 116 32 108 111 111 107 32 108 105 107 101 32 116 104 105 115 46 10 10 10 49 46 32 65 110 100 32 116 104 101 114 101 32 97 114 101 32 110 117 109 98 101 114 101 114 100 32 108 105 115 116 115 32 116 111 111 46 10 49 46 32 85 115 101 32 106 117 115 116 32 49 115 32 105 102 32 121 111 117 32 119 97 110 116 33 32 10 49 46 32 66 117 116 32 116 104 101 32 108 105 115 116 32 103 111 101 115 32 111 110 46 46 46 10 45 32 69 118 101 110 32 105 102 32 121 111 117 32 117 115 101 32 100 97 115 104 101 115 32 111 114 32 97 115 116 101 114 105 115 107 115 46 10 42 32 65 110 100 32 108 97 115 116 32 98 117 116 32 110 111 116 32 108 101 97 115 116 44 32 108 101 116 39 115 32 110 111 116 32 102 111 114 103 101 116 32 101 109 98 101 100 100 101 100 32 105 109 97 103 101 115 58 10 10 33 91 82 101 97 99 116 32 76 111 103 111 32 119 47 32 84 101 120 116 93 40 104 116 116 112 115 58 47 47 103 111 111 46 103 108 47 85 109 121 121 116 99 41".split(" "))) 
          };
         this.onChange = this.onChange.bind(this);
    }

    onChange(e){
        this.setState({
            text:e.target.value,
        });
    }


    render(){
        return ( 
            <div id="container">
                <Editor onChange={this.onChange} value={this.state.text} />
                <Previewer text={this.state.text} />
            </div>
        );
    };
}

export default App;